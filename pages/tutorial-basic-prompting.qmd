---
title: "Prompting basics"
description: |
  Prompting a large language model.
date: last-modified
date-format: "DD MMM, YYYY"
author: 
  - name: Andrew Ellis
    url: https://github.com/awellis
    affiliation: Virtuelle Akademie, Berner Fachhochschule
    affiliation-url: https://virtuelleakademie.ch
    orcid: 0000-0002-2788-936X
license: CC BY
citation: true
bibliography: ../bibliography.bib
format:
    html:
        toc: true
        code-fold: true
        code-link: true
# jupyter: python3
execute: 
  cache: false
  keep-ipynb: true
code-annotations: select
---


## Pyobsplot demo


```{python}
import polars as pl
# from pyobsplot import Plot
# from pyobsplot import Plot, d3, Math, js
from pyobsplot import Obsplot, Plot, d3, js

opw = Obsplot(renderer="widget")
# opj = Obsplot(renderer="jsdom")                                                       # <1>

penguins = pl.read_csv("https://github.com/juba/pyobsplot/raw/main/doc/data/penguins.csv") # <2>
```

1. The `renderer` parameter can be set to `"widget"` or `"jsdom"`. The former is the default and uses the `ipywidgets` library to render the plot in a Jupyter notebook. The latter uses the `pywebview` library to render the plot in a separate window.
2. The `penguins` dataset is a popular dataset from the `palmerpenguins` package in R. It contains measurements of penguins from three species: Adelie, Chinstrap, and Gentoo.
```{python}
penguins
```

```{python}
Plot.plot({
    "grid": True,
    "color": {"legend": True},
    "marks": [
        Plot.dot(
            penguins, 
            {"x": "flipper_length_mm", "y": "body_mass_g", "fill": "species"}
        ),
        Plot.density(
            penguins, 
            {"x": "flipper_length_mm", "y": "body_mass_g", "stroke": "species"}
        )
    ]
})
```




```{python}
data = pl.DataFrame({
    "x": [1, 5, 2, 4, 6, 2, 4],
    "y": [2, 1, 3, 4, 5, 1, 2],
    "type": ["T1", "T2", "T1", "T2", "T1", "T1", "T2"],
})

opw({
    "grid": True,
    "marks": [
        Plot.dot(data, {
            "x": "x", "y": "y", "r": 5,
            "stroke": "black", "fill": "steelblue",
            "fillOpacity": js("d => d.type == 'T1' ? 0.7 : 0.1")
        })
    ]
})
```





<!-- 
```r
library(tidyverse)
library(palmerpenguins)
penguins |>                                      # <1>
  mutate(                                        # <2>
    bill_ratio = bill_depth_mm / bill_length_mm, # <2>
    bill_area  = bill_depth_mm * bill_length_mm  # <2>
  )                                              # <2>
```
1. Take `penguins`, and then,
2. add new columns for the bill ratio and bill area. -->